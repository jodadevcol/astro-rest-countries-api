---
import Layout from "../layout/Layout.astro"
import { GETCountryLocalByCode, GETNameCountriesLocalByBorder } from "../services/countries"
import type { IntoOtherLanguages } from "../types/countries.v3.1"

const { country = "" } = Astro.params
const currentCountry = await GETCountryLocalByCode({ code: country }).then((res) => res)

if (!currentCountry) {
	return { status: 404 }
}
const {
	name,
	flags,
	cca3,
	population,
	region,
	subregion,
	capital,
	tld,
	currencies,
	languages,
	borders = [],
} = currentCountry

const nativeName = Object.values(name.nativeName)
	.map((c: IntoOtherLanguages) => c.common)
	.join(", ")

const namesBorder = await GETNameCountriesLocalByBorder({ code: borders })
---

<Layout title="Detail country">
	<section>
		<div class="flex flex-col gap-y-20">
			<a
				href="/"
				class="inline-flex max-w-36 items-center justify-center space-x-2 rounded-md bg-white px-4 py-2 text-light-100 hover:bg-white/80 hover:text-light-100/60 dark:bg-dark-100 dark:text-white dark:hover:bg-dark-100/40"
				style="filter: drop-shadow(0px 2px 12px rgba(0, 0, 0, 0.05));"
			>
				<div class="h-5 w-5">
					<span class="h-full w-full [&>svg]:h-full [&>svg]:w-full">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 0 24 24"
							fill="currentColor"
							class="size-6"
						>
							<path
								fill-rule="evenodd"
								d="M9.53 2.47a.75.75 0 0 1 0 1.06L4.81 8.25H15a6.75 6.75 0 0 1 0 13.5h-3a.75.75 0 0 1 0-1.5h3a5.25 5.25 0 1 0 0-10.5H4.81l4.72 4.72a.75.75 0 1 1-1.06 1.06l-6-6a.75.75 0 0 1 0-1.06l6-6a.75.75 0 0 1 1.06 0Z"
								clip-rule="evenodd"></path>
						</svg>
					</span>
				</div>
				<span>Back</span>
			</a>

			<article class="flex flex-wrap items-center justify-between gap-x-8 lg:flex-nowrap">
				<div class="flex w-full max-w-xl items-center justify-center">
					<picture class="overflow-hidden rounded-xl">
						<img
							src={flags.svg}
							alt=""
							class="max-h-96 object-contain"
							transition:name={`flag-image-${cca3}`}
						/>
					</picture>
				</div>

				<div class="w-full max-w-xl px-5 text-light-100 dark:text-white lg:px-0">
					<h2 class="mb-6 text-4xl font-extrabold">
						{name.official}
					</h2>

					<div class="mb-10 grid grid-cols-2 items-start justify-between gap-x-5 gap-y-10">
						<div
							class="space-y-2 [&>div>span]:font-semibold [&>div]:text-base [&>div]:font-light [&>div]:leading-4"
						>
							<div>
								<span>Native Name</span>: {nativeName}
							</div>
							<div>
								<span>Population</span>: {new Intl.NumberFormat("en-IN").format(population)}
							</div>
							<div>
								<span>Region</span>: {region}
							</div>
							<div>
								<span>Sub Region</span>: {subregion}
							</div>
							<div>
								<span>Capital</span>: {capital}
							</div>
						</div>

						<div
							class="space-y-2 [&>div>span]:font-semibold [&>div]:text-base [&>div]:font-light [&>div]:leading-4"
						>
							<div>
								<span>Top Level Domain</span>: {tld}
							</div>
							<div>
								<span>Currencies</span>: {
									Object.values(currencies)
										.map((c) => c.name)
										.join(", ")
								}
							</div>
							<div>
								<span>Languages</span>: {
									Object.values(languages)
										.map((l) => l)
										.join(", ")
								}
							</div>
						</div>
					</div>

					{
						namesBorder.length > 0 && (
							<div class="flex gap-x-4">
								<span class="whitespace-nowrap text-base font-semibold">Border Countries</span>:
								<ul class="inline-flex flex-wrap gap-2">
									{namesBorder.map((border) => (
										<li
											class="dark:drop-shadow-none"
											style="filter: drop-shadow(0px 2px 12px rgba(0, 0, 0, 0.05));"
										>
											<a
												href={`/${border.code}`}
												class="inline-block rounded-md bg-white px-4 py-2 text-light-100 hover:bg-white/80 hover:text-light-100/60 dark:bg-dark-100 dark:text-white dark:hover:bg-dark-100/40"
												class="inline-flex max-w-36 items-center justify-center space-x-2 rounded-md bg-white px-4 py-2 text-light-100 hover:bg-white/80 hover:text-light-100/60 dark:bg-dark-100 dark:text-white dark:hover:bg-dark-100/40"
											>
												<span class="whitespace-nowrap">{border.common}</span>
											</a>
										</li>
									))}
								</ul>
							</div>
						)
					}
				</div>
			</article>
		</div>
	</section>
</Layout>
